# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    app.mailer.transport:  smtp

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }
    app.mailer:
        class: UserBundle\Mailer\Mailer
        arguments: ["@service_container", "@router", "@templating", {from_email: {confirmation: %fos_user.registration.confirmation.from_email%, resetting: %fos_user.resetting.email.from_email%}, resetting.template: %fos_user.resetting.email.template%}]

    user.doctrine_avatar_listener:
        class: UserBundle\EventListener\AvatarUploadListener
        arguments: ['@user.avatar_uploader']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postRemove }


    redirect.after.login:
        class: UserBundle\Redirection\AfterLoginRedirection
        arguments: ['@router']


    app.doctrine_image_listener:
        class: AdminBundle\EventListener\ImageUploadListener
        arguments: ['@app.image_uploader']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postRemove }
  
    app.doctrine_document_listener:
        class: AdminBundle\EventListener\DocumentUploadListener
        arguments: ['@app.document_uploader']
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postRemove }