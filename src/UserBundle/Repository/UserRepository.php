<?php

namespace UserBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{


	public function findLocataire()
    {
		$em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
		$val = null;

				return $qb->select('u')
                  ->from('UserBundle:User', 'u')
                  ->where('u.locataire != :locataire')
				  ->setParameter('locataire', $val)
                  ->getQuery()
                  ->getResult();
		
	}
	 public function findNum($pays , $number)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        return $qb->select('u, p , c')
                  ->from('UserBundle:User', 'u')
                  ->innerJoin('u.profil', 'p')
				  ->innerJoin('u.pays', 'c')
                  ->where('p.tel = :tel')
				  ->setParameter('tel', $number)
				  ->andWhere('c.id = :id')
				  ->setParameter('id', $pays)
                  ->getQuery()
                  ->getResult();
    }
	
	public function findNumm($pays , $number)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        return $qb->select('u, p , c')
                  ->from('UserBundle:User', 'u')
                  ->innerJoin('u.professionnel', 'p')
				  ->innerJoin('u.pays', 'c')
                  ->where('p.tel = :tel')
				  ->setParameter('tel', $number)
				  ->andWhere('c.id = :id')
				  ->setParameter('id', $pays)
                  ->getQuery()
                  ->getResult();
    }
	
	
	
    public function findAllAdmin()
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        return $qb->select('u, a')
                  ->from('UserBundle:User', 'u')
                  ->innerJoin('u.admin', 'a')
                  ->where($qb->expr()->isNotNull('u.admin'))
                  ->getQuery()
                  ->getResult();
    }

    public function findAllProfil()
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        return $qb->select('u, p')
            ->from('UserBundle:User', 'u')
            ->innerJoin('u.profil', 'p')
            ->where($qb->expr()->isNotNull('u.profil'))
            ->getQuery()
            ->getResult();
    }
}
